<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ash的blog</title>
    <description></description>
    <link>http://ashliu.com/</link>
    <atom:link href="http://ashliu.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 21 Sep 2018 17:00:21 +0800</pubDate>
    <lastBuildDate>Fri, 21 Sep 2018 17:00:21 +0800</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>两起剐蹭事故</title>
        <description>&lt;p&gt;&lt;img src=&quot;http://pic.ashliu.com/20180920001.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;说来也奇怪，平时很少亲见剐蹭事故发生的全貌，今天不见则以，居然也是成双成对的来。&lt;/p&gt;

&lt;p&gt;先是出门时候，小区路面不算太窄，前面T字口一车在倒90度，感觉是新手(?)，所以我远远停着等，慢慢的眼见和旁边停的车越来越近，在几乎快碰到的时候，他停了下来。然后，加大油门刮了上去，我这么远都听到声音了，他居然不停，把自己也挂了一大片，然后假装没看见的开走了。&lt;/p&gt;

&lt;p&gt;到公司后等我设备运达，说好9点硬是11点半才到，看着货车开过来，我挥手示意，这边！不知道司机是不是抽经了，一盘子打过来，尼玛把旁边停的奥迪A6尾灯直接挂没了。奥迪司机还在车里面打电话，一脸懵逼的走出来，电话都忘记挂了。然后是无休止的扯皮，双方都不让挪车。眼看着设备就在门口也没办法，一直等了快2个小时交警慢悠悠的过来处理完才搬，一脸黑线。&lt;/p&gt;

&lt;p&gt;最后，还好客户今天不来，不然就坑大了。:)&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;每日一图&lt;/h3&gt;

&lt;p&gt;千瓦清洗机设备里面一角，感觉很好用，以后可以借鉴。&lt;/p&gt;
</description>
        <pubDate>Thu, 20 Sep 2018 21:00:00 +0800</pubDate>
        <link>http://ashliu.com/%E8%AE%B0%E4%BA%8B/2018/09/20/%E4%B8%A4%E8%B5%B7%E5%89%90%E8%B9%AD%E4%BA%8B%E6%95%85.html</link>
        <guid isPermaLink="true">http://ashliu.com/%E8%AE%B0%E4%BA%8B/2018/09/20/%E4%B8%A4%E8%B5%B7%E5%89%90%E8%B9%AD%E4%BA%8B%E6%95%85.html</guid>
        
        
        <category>记事</category>
        
      </item>
    
      <item>
        <title>一键上传图</title>
        <description>&lt;p&gt;&lt;img src=&quot;http://pic.ashliu.com/20180919004.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;很早就用alfred来实现一键上传图片到七牛，但是那个时候没有想太多，刚好昨天在弄图床，索性今天就一并做好得了。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;1. 七牛提供的工具&lt;/h3&gt;
&lt;p&gt;要上传图片到七牛,可以通过API来实现，也可以通过工具来实现，显然工具更快。工具的名称叫&lt;strong&gt;qrsctl&lt;/strong&gt;，相关的说明见官方&lt;a href=&quot;https://developer.qiniu.com/kodo/tools/1300/qrsctl&quot;&gt;文档&lt;/a&gt;；&lt;/p&gt;

&lt;p&gt;使用2条命令：一个登陆，一个上传图片即可。唯一需要说明的是上传命令中的key：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;qrsctl put -c &amp;lt;Bucket&amp;gt; &amp;lt;Key&amp;gt; &amp;lt;SrcFile&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;简单点说，key就是上传后的文件名字，可以带&lt;code&gt;/&lt;/code&gt;符号，比如&lt;code&gt;/jpg/abc.jpg&lt;/code&gt;之类的。&lt;/p&gt;

&lt;h3 id=&quot;alfred&quot;&gt;2. Alfred&lt;/h3&gt;

&lt;p&gt;前段时间(差不多1年多了吧)一直是win7，其实已经习惯了win键然后直接输入APP名称启动的方式，所以对于alfred已经没有了初见时的那种膜拜之情，但是alfred的workflows确实值得好好品玩。&lt;/p&gt;

&lt;p&gt;关于如何玩workflows就不说了，仅仅记录下我的脚本和输入输出。&lt;/p&gt;

&lt;p&gt;首先是结构图，如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://pic.ashliu.com/20180919002.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;使用快捷键触发这个flow，然后执行特定的脚本上传文件，最后通知过程完成，以及复制地址到剪切板可以直接使用。&lt;/p&gt;

&lt;p&gt;唯一有技术性质的，就是这个脚本了，内容如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/Users/ww7472242/blog/blog-pic/qrsctl login 578410647@qq.com password &amp;gt;/dev/null
/Users/ww7472242/blog/blog-pic/qrsctl put -c &quot;ash-picture&quot; {query} /Users/ww7472242/Desktop/{query} &amp;gt;/dev/null
echo {query}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;就是七牛工具的基本使用，其中{query}是剪切板里面的内容，传递到脚本作为参数。打印信息重定位到null的意义是防止它传递到后级，因为仅仅需要echo命令把剪切板内容传递即可。&lt;/p&gt;

&lt;p&gt;最后，在剪切板输出中添加上url地址前面部分即可：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://pic.ashliu.com/{query}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上，enjoy.&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;每日一图&lt;/h3&gt;

&lt;p&gt;题图为6点定位法建立机器人TCP坐标的一瞬；&lt;/p&gt;
</description>
        <pubDate>Wed, 19 Sep 2018 15:00:00 +0800</pubDate>
        <link>http://ashliu.com/%E6%8A%80%E6%9C%AF/2018/09/19/%E4%B8%80%E9%94%AE%E4%B8%8A%E4%BC%A0%E5%9B%BE.html</link>
        <guid isPermaLink="true">http://ashliu.com/%E6%8A%80%E6%9C%AF/2018/09/19/%E4%B8%80%E9%94%AE%E4%B8%8A%E4%BC%A0%E5%9B%BE.html</guid>
        
        
        <category>技术</category>
        
      </item>
    
      <item>
        <title>重振图床</title>
        <description>&lt;p&gt;&lt;img src=&quot;http://pic.ashliu.com/20180917.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在查看”热心读者“来信的时候，无意间看到了七牛发给我的邮件，原来空间外链的域名会30天一换，这会导致我之前的图片地址失效。登陆其后台看了下，虽然可以绑定固定的域名，但是要IPC实名验证。&lt;/p&gt;

&lt;p&gt;好吧，只能自己动手了，大体思路是在Nginx下挂一个代理，用一个不变的域名映射到随他怎么变的七牛地址即可。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;1. 整一个固定的域名&lt;/h3&gt;

&lt;p&gt;不用想了，肯定是&lt;strong&gt;pic.ashliu.com&lt;/strong&gt;。为了让它可以指向vps的ip，需要在域名管理后台添加一个CNAME，协议是pic，然后指向@即可。设置以后，ping下&lt;strong&gt;pic.ashliu.com&lt;/strong&gt;，查看dns是否生效。&lt;/p&gt;

&lt;h3 id=&quot;nginx&quot;&gt;2. Nginx配置&lt;/h3&gt;

&lt;p&gt;首先，在&lt;code&gt;/etc/nginx/sites-available/&lt;/code&gt;目录下新建一个名为pic的文件，作为&lt;strong&gt;pic.ashliu.com&lt;/strong&gt;主机的配置文件，里面的内容很简单：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;server {
    listen 80;
    server_name pic.ashliu.com;
    return 301 http://7xk84a.com1.z0.glb.clouddn.com$uri;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;监听80端口，监听的主机是&lt;strong&gt;pic.ashliu.com&lt;/strong&gt;，执行重定向操作，其中$uri代表URI路径，也就是地址除域名外的其他部分。&lt;/p&gt;

&lt;p&gt;然后，在&lt;code&gt;/etc/nginx/sites-enabled/&lt;/code&gt;建立一个软连接，指向上面那个pic文件：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo ln -s ../sites-available/pic pic
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最后，reload配置即可：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo nginx -s reload
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;section-1&quot;&gt;关于图&lt;/h2&gt;
&lt;p&gt;图为今天晚饭后回公司路上所拍，风景不错，黄昏尤甚。&lt;/p&gt;
</description>
        <pubDate>Tue, 18 Sep 2018 22:33:00 +0800</pubDate>
        <link>http://ashliu.com/%E6%8A%80%E6%9C%AF/2018/09/18/%E9%87%8D%E6%8C%AF%E5%9B%BE%E5%BA%8A.html</link>
        <guid isPermaLink="true">http://ashliu.com/%E6%8A%80%E6%9C%AF/2018/09/18/%E9%87%8D%E6%8C%AF%E5%9B%BE%E5%BA%8A.html</guid>
        
        
        <category>技术</category>
        
      </item>
    
      <item>
        <title>抽空架个SS</title>
        <description>&lt;p&gt;&lt;img src=&quot;http://pic.ashliu.com/2018-09-17-321.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;目标&lt;/h3&gt;
&lt;p&gt;本空间的一大职能就是提供必要时候的CQ功能，所以在ss成了貌似唯一的选择。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;过程&lt;/h3&gt;
&lt;p&gt;过程好像真没有什么好说的，现在实在是太方便了，都是一键配置的。我参考了&lt;a href=&quot;http://blog.51cto.com/13756513/2118075&quot;&gt;这里&lt;/a&gt;，他讲的更加详细，连怎么申请vps都说了，目标明确，就是奔着CQ去的。&lt;/p&gt;

&lt;p&gt;为了以备万一，这里也简单记录下：&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;1. 下载一键配置脚本：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/flyzy2005/ss-fly
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;section-3&quot;&gt;2. 执行安装命令：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;ss-fly/ss-fly.sh -i 123456 1024
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中123456是你想要的密码，1024是ss服务器端的默认端口，最好改成其他的值，比如4024之类的。就搞定了，等待安装完毕即可。&lt;/p&gt;

&lt;h4 id=&quot;section-4&quot;&gt;3. 相关操作&lt;/h4&gt;
&lt;p&gt;非常基本的操作，不过多说了.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;修改配置文件：vim /etc/shadowsocks.json  
查看SS的log: cat /var/log/shadowsocks.log  
停止ss服务：ssserver -c /etc/shadowsocks.json -d stop  
启动ss服务：ssserver -c /etc/shadowsocks.json -d start  
重启ss服务：ssserver -c /etc/shadowsocks.json -d restart   
卸载：ss-fly/ss-fly.sh -uninstall   
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;bbr&quot;&gt;4. 开启BBR&lt;/h4&gt;

&lt;p&gt;BBR是Google开放的一个TCP加速算法，&lt;a href=&quot;https://baijiahao.baidu.com/s?id=1583566587466620295&amp;amp;wfr=spider&amp;amp;for=pc&quot;&gt;这里&lt;/a&gt;有一个简短的介绍。为SS开启BBR后，可以限制提升速度(&lt;strong&gt;听说而已&lt;/strong&gt;)。打开的方式也是一键完成：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ss-fly/ss-fly.sh -bbr
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;执行命令以后，可能会升级内核版本，然后提示重启系统。重启完成以后，可以通过以下的命令来判断BBR是否开启正常：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;命令：sysctl net.ipv4.tcp_available_congestion_control
正确返回：net.ipv4.tcp_available_congestion_control = bbr cubic reno
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上，服务端就完成了。&lt;/p&gt;

&lt;h3 id=&quot;section-5&quot;&gt;客户端设置&lt;/h3&gt;

&lt;p&gt;客户端的设置相对就简单多了，下载地址参考&lt;a href=&quot;https://www.flyzy2005.win/fan-qiang/shadowsocks/ss-clients-download/&quot;&gt;这里&lt;/a&gt;;
打开客户端以后，按照server端填写的信息填写即可。其中PAC模式就是需要的时候走代理，国内网站不走代理，这个选择是通过PAC文件来决定，一般通过GFWList更新即可。&lt;/p&gt;
</description>
        <pubDate>Mon, 17 Sep 2018 20:33:00 +0800</pubDate>
        <link>http://ashliu.com/%E6%8A%80%E6%9C%AF/2018/09/17/%E6%8A%BD%E7%A9%BA%E6%9E%B6%E4%B8%AASS.html</link>
        <guid isPermaLink="true">http://ashliu.com/%E6%8A%80%E6%9C%AF/2018/09/17/%E6%8A%BD%E7%A9%BA%E6%9E%B6%E4%B8%AASS.html</guid>
        
        
        <category>技术</category>
        
      </item>
    
      <item>
        <title>Blog的新生</title>
        <description>&lt;p&gt;&lt;img src=&quot;http://pic.ashliu.com/%E5%93%A5%E6%96%AF%E6%8B%89123321.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;意外的惊喜&lt;/h3&gt;
&lt;p&gt;已经忘记是哪个网站了，弹出了域名注册的广告，一阵恍惚之后想看一看&lt;strong&gt;ashliu.com&lt;/strong&gt;还在不在，查询以后果不其然，已经被注册，whois信息没有联系方式，于是更加恍惚。之后想到我godaddy里面好像注册过一个域名，已经忘记是什么了，依稀是与ash相关的，隐约打算做博客。又是一阵操作，毕竟上个gmail找到用户名和密码也不是件容易的事，终于登陆上了一看，居然就是&lt;strong&gt;ashliu.com&lt;/strong&gt;，顿时无语！咒骂自己健忘之余，甚至有点小小惊喜，仿佛这白捡的一般。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;三重门&lt;/h3&gt;
&lt;p&gt;今天迷糊是有原因的。因为昨晚kindle看书看太晚了，为什么会kindle看书呢，是因为在自己的百度网盘里面找到了N个G的电子书，不想浪费，希望有生之年可以多消灭一些。为什么会无聊去翻百度盘呢，是因为某个淘宝卖片的更新了最新的机器学习和视觉的教程，盘空间不够了。所以仔细想来，是机器视觉导致了本域名重现。人就是这样，当我忙一整天博客，不亦乐乎的时候，已经忘记了初衷其实是要学视觉。&lt;/p&gt;

&lt;p&gt;是的，重温的是韩寒的&lt;三重门&gt;，现在的我的感觉，已经没有当初看三重门时候的兴奋感了，觉得韩寒写的有些矫情，故意的段子和讽刺，是廉价的兴奋，现在老了，所以兴奋感低了。但是仍然记得初中那时候，化学老师那张兴奋的孩子样的脸，向我们强烈推荐三重门，不读枉为人！&lt;/三重门&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;空间在哪里&lt;/h3&gt;
&lt;p&gt;linode那种高富帅实在用不起，所以选择了&lt;a href=&quot;https://www.vultr.com&quot;&gt;vultr&lt;/a&gt;，听说之前还有2.5刀每月的，现在的这个配置只支持ipv6，那就不考虑了。往上一档是3.5刀一个月，20G硬盘512M内存，好像也够用。我的需求也很简单，无非挂个博客，然后必要的时候跑几个测试的server，也就是能有个python+node的环境就好。&lt;/p&gt;

&lt;p&gt;也是好久不玩vps，不知道现在的墙这么神通。以前都是dns污染，或者直接封ip地址，现在是TCP阻断：ping的通，但是tcp连不上。没有办法，美帝的机房试了2个都不行，只能投靠Tokyo。以后得经常备份才行，说不定哪天日本的ip也不通就尴尬了。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;关于图&lt;/h3&gt;
&lt;p&gt;我已经不记得什么时候看过夏达的&lt;哥斯拉不说话&gt;了，但里面最后一句话依然清晰，看我之前写的博客让我想起来了这句话。漫画和夏达本人都太萌了，放图实在不合适，所以选了一张Q版哥斯拉。&lt;/哥斯拉不说话&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 16 Sep 2018 20:33:00 +0800</pubDate>
        <link>http://ashliu.com/%E8%AE%B0%E4%BA%8B/2018/09/16/blog%E7%9A%84%E6%96%B0%E7%94%9F.html</link>
        <guid isPermaLink="true">http://ashliu.com/%E8%AE%B0%E4%BA%8B/2018/09/16/blog%E7%9A%84%E6%96%B0%E7%94%9F.html</guid>
        
        
        <category>记事</category>
        
      </item>
    
      <item>
        <title>读安下心来</title>
        <description>&lt;p&gt;这是一本讲专注于当下的书。如同作者在简介里面所说：你只需要做好一件事，那就是安下心来，专注于当下，而不是被未知的迷茫所笼罩，那么我们期待的生活会自然而然的发生。&lt;/p&gt;

&lt;p&gt;安下心来的六颗定心丸：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;不予确定，保持敏感；保持空瓶心态，学习心态。&lt;/li&gt;
  &lt;li&gt;看到他人和自己的可能；有敬畏之心。&lt;/li&gt;
  &lt;li&gt;获得自己的答案；独立思考，不要人云亦云。&lt;/li&gt;
  &lt;li&gt;相信自身非凡的力量；自信，自信，自信，重要事情说三遍。&lt;/li&gt;
  &lt;li&gt;在爱中生根发芽；对事物充满兴趣和爱心。&lt;/li&gt;
  &lt;li&gt;这就是我的生活；放下包袱，立地成佛。&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 06 Aug 2015 00:00:00 +0800</pubDate>
        <link>http://ashliu.com/2015/08/06/%E5%AE%89%E4%B8%8B%E5%BF%83%E6%9D%A5.html</link>
        <guid isPermaLink="true">http://ashliu.com/2015/08/06/%E5%AE%89%E4%B8%8B%E5%BF%83%E6%9D%A5.html</guid>
        
        <category>读书</category>
        
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://github.com/jekyll/jekyll-help&quot;&gt;Jekyll’s dedicated Help repository&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Thu, 30 Jul 2015 11:23:40 +0000</pubDate>
        <link>http://ashliu.com/jekyll/update/2015/07/30/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://ashliu.com/jekyll/update/2015/07/30/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>寻找新的基地</title>
        <description>&lt;p&gt;前几天登陆&lt;a href=&quot;http://scriptogr.am&quot;&gt;scriptogr.am&lt;/a&gt;的时候就看到了他们的重要公告：&lt;strong&gt;停止服务！&lt;/strong&gt;，看了下blog的说明，没有明确的原因，截止日期是8-15。额，看来只有重新找窝了。&lt;/p&gt;

&lt;p&gt;在网上找了一圈，没有发现特别好的blog服务(主要是支持markdown编辑的)，于是重回jekyll的怀抱，主机使用github的page服务。没有使用octopress，我当时觉得octopress相比于jekyll要难理解许多，所以选择也懒得去整，直接jekyll即方便又好理解。&lt;/p&gt;

&lt;p&gt;主要的工作是把老旧的md文件迁移过来，之前使用scriptogr.am的服务，它对header的格式要求与page有那么一点点差异，使用脚本好像比较难处理，所以全部手动修改。&lt;/p&gt;

</description>
        <pubDate>Thu, 30 Jul 2015 00:00:00 +0800</pubDate>
        <link>http://ashliu.com/2015/07/30/new-blog-service.html</link>
        <guid isPermaLink="true">http://ashliu.com/2015/07/30/new-blog-service.html</guid>
        
        <category>技术</category>
        
        
      </item>
    
      <item>
        <title>反脆弱——从不确定性中获益</title>
        <description>&lt;p&gt;作者已经在前作黑天鹅里面讲述了一个真理，那就是无法避免的黑天鹅现象，那么既然这种不确定性是无法避免的，我们应该采取什么样的心态来面对它们呢？作者说我们不要做被风一吹就熄灭的蜡烛，而是要成为越吹越旺盛的炉火，我们不仅应该在不确定性中存活下来，而且还应该借助不确定性变得更加强大。&lt;/p&gt;

&lt;p&gt;生命体的不断进化就是反脆弱性的一种体现，在面对挑战的时候积极的改变者总能够更好的延续下去，并且具备更强大的竞争力，反观那些脆弱者会被挑战所淘汰。所以也可以这么说：杀不死我的必使我强大，而杀死我的却能够让别人强大。通过这个结论就可以推出另一个重要的推论：&lt;strong&gt;&lt;em&gt;要想更具竞争力，那么就不应该惧怕不确定性，反而应该积极的拥抱它&lt;/em&gt;&lt;/strong&gt;。后面还有好长的目录，但看起来是对上面推论的正反论证，我只抓中心，所以就直接略过。&lt;/p&gt;

&lt;p&gt;作者的论点应该可以泛化为：我们对压力(或者内心的恐惧)的态度以及压力对我们进步的作用。我们不应该逃避压力，直面它们才能使我们的内心更加强大，相比之无法承受这些压力和恐惧的人，我们就相当于进化了一步，所以更具竞争力。&lt;/p&gt;
</description>
        <pubDate>Wed, 29 Jul 2015 00:00:00 +0800</pubDate>
        <link>http://ashliu.com/2015/07/29/fancuiruoxing.html</link>
        <guid isPermaLink="true">http://ashliu.com/2015/07/29/fancuiruoxing.html</guid>
        
        
      </item>
    
      <item>
        <title>读创新者的窘境</title>
        <description>&lt;p&gt;&lt;img src=&quot;http://pic.ashliu.com/chuangxinzhejiongjin.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;听说&lt;/h3&gt;
&lt;p&gt;这部神作很早就有耳闻，一直没有拜读，直到最近读过了罗辑思维的登高四书，里面有一本专门讲颠覆式创新的，几乎全篇都有提创新者的窘境，于是果断的入手了一本。通篇读下来，眼界大开，同时感觉后悔读了神马登高四书——被提前剧透了结论嘛，并且登高这本明显就是照搬的创新者。。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;论点&lt;/h3&gt;
&lt;p&gt;作者从硬盘企业的失败现象出发，提出了一个匪夷所思的窘境：&lt;strong&gt;&lt;em&gt;就算是成熟的企业，也无法避免被破坏式变革所颠覆的宿命&lt;/em&gt;&lt;/strong&gt;。所谓的成熟企业，是指兢兢业业的恪守市场规律，满足客户和股东利益，并且有着科学的管理规范的企业，他们理应是学院派或者华尔街所看好的范例；所谓的破坏式变革，这是相对于延续性变革而言，它不是对当前产品/服务的修修补补，而且一种另起炉灶的重建，而且往往是从低端的，其他场景切入进来。从另一个角度来说，这可能也是打败行业寡头的唯一办法。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;论据&lt;/h3&gt;
&lt;p&gt;作者给出的解释简单来说，就是因为推动企业成功的那些优良品德，同样会阻止它们拥抱破坏性变革，而这些破坏性技术则有朝一日成为它们的终结者。都是哪些优良品德呢：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;听取客户的意见&lt;/li&gt;
  &lt;li&gt;大力投资客户所希望的改进&lt;/li&gt;
  &lt;li&gt;争取更高的利润以回报股东和员工&lt;/li&gt;
  &lt;li&gt;最求更大的市场等等&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;为什么企业会被这些品德所羁绊呢，作者给出了4条破坏性技术的原则：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;企业的资源分布取决于客户和投资者&lt;/em&gt;&lt;/strong&gt;。为了更具竞争力，企业的资源会更加倾向于客户已经认可的需求，而忽视掉破坏性的的技术，因为这些破坏性技术在刚开始时，总是代表着低利润，低性能等等特性，它所具备的优势可能是当前客户所不在意的一些方面。所以，作为一个成熟的决策者，理所当然的会忽视掉这些。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;小市场不能解决大企业的增长需求&lt;/em&gt;&lt;/strong&gt;。这对应着破坏性技术的另一个特点，即总是从小众，低端的市场出发，那么在企业眼里它仅仅是一个食之无味，弃之也不可惜的鸡肋。所以不要说管理层会排斥它，甚至一般的员工也会排斥它，因为它会拖累员工个人的绩效，从而失去晋升的机会。所以这也注定了破坏性创新无法在企业内部的发生。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;无法对并不存在的市场进行分析&lt;/em&gt;&lt;/strong&gt;。破坏性创新往往是从开辟一个全新的市场起步，那么对于市场人员而言，根本就无法做出可信赖的分析，因为他们的分析往往来至于当下的客户，或者是臆想的客户的反馈，那么当然会得到负面的结果(前面有提到：因为更低的性能，更低的性价比，和看似无用的新特性)。所以说除非真刀真枪的进去摸索一番，否则不可能有什么结果。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;技术供给可能并不等同于市场需求&lt;/em&gt;&lt;/strong&gt;。这一条感觉好晦涩。技术的发展往往快过客户的需求，在客户对主流参数的需求达到一个饱和点的时候，你技术再牛逼，对于客户而言是过剩的，客户选择的标准就会从&lt;strong&gt;功能&lt;/strong&gt;，转变到&lt;strong&gt;可靠性&lt;/strong&gt;，&lt;strong&gt;便捷性&lt;/strong&gt;和&lt;strong&gt;价格&lt;/strong&gt;上来，这个时候就给了破坏性技术可乘之机，因为它们往往具备这些其他属性，比如便捷，低价等。所以这里也可以看到，破坏性技术并不是轻而易举就可以干翻主流技术，这个翻身的点往往是发生在性能饱和处。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;怎么办？&lt;/h3&gt;
&lt;p&gt;出路只有一条：&lt;strong&gt;顺应天命，道法自然&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;企图在内部强制推行破坏式技术是不可取的，它会像异物一样，引发母体强烈的排异反应。这很好理解，破坏式技术和母公司有着不同的RPV(资源，流程以及价值观)，放在一起必然是相互拖累，最后破坏性技术腹死胎中。&lt;/p&gt;

&lt;p&gt;什么叫道法自然呢(书里面在这里提到了道德经，所以我果断放出了这句话，古文不是白读的~)：母公司应该正视这种颠覆，就像生老病死一样的，企图逆天而行总是不得好死。所以最好的办法就是新开一个小号，独立团队，自负盈亏，去重新实现符合破坏性技术的RPV。这样在大劫来临之际，可以成功的转世。&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;个人的一些想法&lt;/h3&gt;
&lt;p&gt;从某种程度上说，我对这套思路是无比赞同的，但是感觉又好像不是那么的让人信服，至少在IT行业不是那么的让人信服。RPV真的有那么大的能力，可以阻止破坏性技术的发生吗？对于国内的某些IT大佬，不是经常有新闻说分分钟copy创新公司的想法，然后直接把新技术干翻在地嘛。到底是这些创新算不上破坏性，还是说IT领域特别的PRV不适合这套理论？这其实都是值得不断思考的问题。&lt;/p&gt;

&lt;p&gt;以上思考过后，在看到各种鼓吹颠覆式创新，理所应当的就能干翻各种大腕的神人培训的时候，就可以多一份理性。&lt;/p&gt;

</description>
        <pubDate>Tue, 28 Jul 2015 00:00:00 +0800</pubDate>
        <link>http://ashliu.com/2015/07/28/read-chuangxinzhedejiongjing.html</link>
        <guid isPermaLink="true">http://ashliu.com/2015/07/28/read-chuangxinzhedejiongjing.html</guid>
        
        
      </item>
    
  </channel>
</rss>
